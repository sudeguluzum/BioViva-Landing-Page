{"version":3,"file":"carousel.min.js","sources":["../src/shared/constants.ts","../src/shared/injectSymbols.ts","../src/shared/slideRegistry.ts","../src/utils/createCloneSlides.ts","../src/utils/disableChildrenTabbing.ts","../src/utils/getNumberInRange.ts","../src/utils/getScaleMultipliers.ts","../src/utils/getSnapAlignOffset.ts","../src/utils/i18nFormatter.ts","../src/utils/mapNumberToRange.ts","../src/utils/throttle.ts","../src/utils/toCssValue.ts","../src/components/ARIA/ARIA.ts","../src/components/Carousel/carouselProps.ts","../src/components/Carousel/Carousel.ts","../src/utils/except.ts","../src/utils/calculateAverage.ts","../src/utils/getDraggedSlidesCount.ts","../src/components/Icon/Icon.types.ts","../src/components/Icon/Icon.ts","../src/components/Navigation/Navigation.ts","../src/components/Pagination/Pagination.ts","../src/components/Slide/Slide.ts"],"sourcesContent":["import { CarouselConfig } from './types'\n\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\n\nexport const DIR_MAP = {\n  'bottom-to-top': 'btt',\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n} as const\n\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\n\nexport const I18N_DEFAULT_CONFIG = {\n  ariaGallery: 'Gallery',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowLeft: 'Arrow pointing to the left',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowUp: 'Arrow pointing upwards',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  autoplay: 0,\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  dir: DIR_OPTIONS[0],\n  enabled: true,\n  gap: 0,\n  height: 'auto',\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  itemsToScroll: 1,\n  itemsToShow: 1,\n  modelValue: 0,\n  mouseDrag: true,\n  pauseAutoplayOnHover: false,\n  preventExcessiveDragging: false,\n  slideEffect: SLIDE_EFFECTS[0],\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  touchDrag: true,\n  transition: 300,\n  wrapAround: false,\n}\n","import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n","import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n","import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      position,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n","import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n","type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n","export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n\nexport type ScaleMultipliers = {\n  widthMultiplier: number\n  heightMultiplier: number\n}\nexport function getScaleMultipliers(\n  transformElements: Set<HTMLElement>\n): ScaleMultipliers {\n  let widthMultiplier = 1\n  let heightMultiplier = 1\n  transformElements.forEach((el) => {\n    const transformArr = getTransformValues(el)\n\n    if (transformArr.length === 6) {\n      widthMultiplier /= transformArr[0]\n      heightMultiplier /= transformArr[3]\n    }\n  })\n\n  return { widthMultiplier, heightMultiplier }\n}\n","import { SnapAlign } from '@/shared'\n\ntype SnapAlignOffsetParams = {\n  align: SnapAlign\n  slideSize?: number\n  viewportSize?: number\n  itemsToShow?: number\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on items to show.\n * Returns the number of slides to offset.\n *\n * @param align - The alignment type.\n * @param itemsToShow - The number of items to show.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetByItemsToShow(align: SnapAlign, itemsToShow: number): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on slide and viewport size.\n * Returns the real width to offset.\n *\n * @param align - The alignment type.\n * @param slideSize - The size of the slide.\n * @param viewportSize - The size of the viewport.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetBySlideAndViewport(\n  align: SnapAlign,\n  slideSize: number,\n  viewportSize: number\n): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (viewportSize - slideSize) / 2\n    case 'center-even':\n      return viewportSize / 2 - slideSize\n    case 'end':\n      return viewportSize - slideSize\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item.\n *\n * @param params - The parameters for calculating the offset.\n * @returns The calculated offset.\n */\nexport function getSnapAlignOffset({\n  slideSize,\n  viewportSize,\n  align,\n  itemsToShow,\n}: SnapAlignOffsetParams): number {\n  if (itemsToShow !== undefined) {\n    return getSnapAlignOffsetByItemsToShow(align, itemsToShow)\n  }\n  if (slideSize !== undefined && viewportSize !== undefined) {\n    return getSnapAlignOffsetBySlideAndViewport(align, slideSize, viewportSize)\n  }\n\n  return 0\n}\n","export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n","type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n","/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n","/**\n * Converts a value to a CSS-compatible string.\n * @param value - The value to convert.\n * @returns The CSS-compatible string.\n **/\nexport function toCssValue(\n  value?: string | number,\n  unit: string = 'px'\n): string | undefined {\n  if (value === null || value === undefined || value === '') {\n    return undefined\n  }\n\n  if (typeof value === 'number' || parseFloat(value).toString() === value) {\n    return `${value}${unit}`\n  }\n  return value\n}\n","import { defineComponent, h, inject } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n","import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  CarouselConfig,\n  Dir,\n  NonNormalizedDir,\n  NormalizedDir,\n  SlideEffect,\n  SnapAlign,\n} from '@/shared'\n\nexport const carouselProps = {\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // control the gap between slides\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: [Number, String],\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging.\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: Boolean,\n  },\n  // toggle mouse dragging.\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: Boolean,\n  },\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  preventExcessiveDragging: {\n    default: false,\n    type: Boolean,\n    validator(value: boolean, props: { wrapAround?: boolean }) {\n      if (value && props.wrapAround) {\n        console.warn(\n          `[vue3-carousel warn]: \"preventExcessiveDragging\" cannot be used with wrapAround. The setting will be ignored.`\n        )\n      }\n\n      return true\n    },\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // control the gap between slides\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir, props: { height?: string }) {\n      // The value must match one of these strings\n      if (!DIR_OPTIONS.includes(value)) {\n        return false\n      }\n\n      const normalizedDir =\n        value in DIR_MAP ? DIR_MAP[value as NonNormalizedDir] : (value as NormalizedDir)\n      if (\n        ['ttb', 'btt'].includes(normalizedDir) &&\n        (!props.height || props.height === 'auto')\n      ) {\n        console.warn(\n          `[vue3-carousel warn]: The dir \"${value}\" is not supported with height \"auto\".`\n        )\n      }\n      return true\n    },\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n}\n","import {\n  ComputedRef,\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  Ref,\n  ref,\n  SetupContext,\n  shallowReactive,\n  watch,\n  watchEffect,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport {\n  CarouselConfig,\n  createSlideRegistry,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  injectCarousel,\n  NonNormalizedDir,\n  NormalizedDir,\n} from '@/shared'\nimport {\n  calculateAverage,\n  createCloneSlides,\n  except,\n  getDraggedSlidesCount,\n  getNumberInRange,\n  getScaleMultipliers,\n  getSnapAlignOffset,\n  mapNumberToRange,\n  ScaleMultipliers,\n  throttle,\n  toCssValue,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  ElRect,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'before-init',\n    'drag',\n    'init',\n    'loop',\n    'slide-end',\n    'slide-registered',\n    'slide-start',\n    'slide-unregistered',\n    'update:modelValue',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => slidesCount.value - 1)\n    const minSlideIndex = computed(() => 0)\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n    const isAuto = computed(() => config.itemsToShow === 'auto')\n\n    const dimension = computed(() => (isVertical.value ? 'height' : 'width'))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    const slidesRect = ref<Array<ElRect>>([])\n    function updateSlidesRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      slidesRect.value = slides.map((slide) => {\n        const rect = slide.exposed?.getBoundingRect()\n        return {\n          width: rect.width * widthMultiplier,\n          height: rect.height * heightMultiplier,\n        }\n      })\n    }\n    const viewportRect: Ref<ElRect> = ref({\n      width: 0,\n      height: 0,\n    })\n    function updateViewportRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      const rect = viewport.value?.getBoundingClientRect() || { width: 0, height: 0 }\n      viewportRect.value = {\n        width: rect.width * widthMultiplier,\n        height: rect.height * heightMultiplier,\n      }\n    }\n\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n\n      const scaleMultipliers = getScaleMultipliers(transformElements)\n\n      updateViewportRectSize(scaleMultipliers)\n      updateSlidesRectSize(scaleMultipliers)\n\n      if (isAuto.value) {\n        slideSize.value = calculateAverage(\n          slidesRect.value.map((slide) => slide[dimension.value])\n        )\n      } else {\n        const itemsToShow = Number(config.itemsToShow)\n        const totalGap = (itemsToShow - 1) * config.gap\n        slideSize.value = (viewportRect.value[dimension.value] - totalGap) / itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n\n      // Validate itemsToShow\n      if (!isAuto.value) {\n        config.itemsToShow = getNumberInRange({\n          val: Number(config.itemsToShow),\n          max: slidesCount.value,\n          min: 1,\n        })\n      }\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    let isTouch = false\n    const startPosition = { x: 0, y: 0 }\n    const dragged = reactive({ x: 0, y: 0 })\n    const isHover = ref(false)\n    const isDragging = ref(false)\n\n    const handleMouseEnter = (): void => {\n      isHover.value = true\n    }\n    const handleMouseLeave = (): void => {\n      isHover.value = false\n    }\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              next(true)\n            } else {\n              prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              prev(true)\n            } else {\n              next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    function handleDragStart(event: MouseEvent | TouchEvent): void {\n      // Prevent drag initiation on input elements or if already sliding\n      const targetTagName = (event.target as HTMLElement).tagName\n      if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || isSliding.value) {\n        return\n      }\n\n      // Detect if the event is a touchstart or mousedown event\n      isTouch = event.type === 'touchstart'\n\n      // For mouse events, prevent default to avoid text selection\n      if (!isTouch) {\n        event.preventDefault()\n        if ((event as MouseEvent).button !== 0) {\n          // Ignore non-left-click mouse events\n          return\n        }\n      }\n\n      // Initialize start positions for the drag\n      startPosition.x = 'touches' in event ? event.touches[0].clientX : event.clientX\n      startPosition.y = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Attach event listeners for dragging and drag end\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.addEventListener(moveEvent, handleDragging, { passive: false })\n      document.addEventListener(endEvent, handleDragEnd, { passive: true })\n    }\n\n    const handleDragging = throttle((event: TouchEvent | MouseEvent): void => {\n      isDragging.value = true\n\n      // Get the current position based on the interaction type (touch or mouse)\n      const currentX = 'touches' in event ? event.touches[0].clientX : event.clientX\n      const currentY = 'touches' in event ? event.touches[0].clientY : event.clientY\n\n      // Calculate deltas for X and Y axes\n      dragged.x = currentX - startPosition.x\n      dragged.y = currentY - startPosition.y\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged,\n        effectiveSlideSize: effectiveSlideSize.value,\n      })\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n\n      // Emit a drag event for further customization if needed\n      emit('drag', { deltaX: dragged.x, deltaY: dragged.y })\n    })\n\n    function handleDragEnd(): void {\n      handleDragging.cancel()\n\n      // Prevent accidental clicks when there is a slide drag\n      if (activeSlideIndex.value !== currentSlideIndex.value && !isTouch) {\n        const preventClick = (e: MouseEvent) => {\n          e.preventDefault()\n          window.removeEventListener('click', preventClick)\n        }\n        window.addEventListener('click', preventClick)\n      }\n\n      slideTo(activeSlideIndex.value)\n\n      // Reset drag state\n      dragged.x = 0\n      dragged.y = 0\n      isDragging.value = false\n\n      const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n      const endEvent = isTouch ? 'touchend' : 'mouseup'\n      document.removeEventListener(moveEvent, handleDragging)\n      document.removeEventListener(endEvent, handleDragEnd)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n\n      let targetIndex = slideIndex\n      let mappedIndex = slideIndex\n\n      prevSlideIndex.value = currentSlideIndex.value\n\n      if (!config.wrapAround) {\n        targetIndex = getNumberInRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      } else {\n        mappedIndex = mapNumberToRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = targetIndex\n      if (mappedIndex !== targetIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', mappedIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround && mappedIndex !== targetIndex) {\n          modelWatcher.resume()\n\n          currentSlideIndex.value = mappedIndex\n          emit('loop', {\n            currentSlideIndex: currentSlideIndex.value,\n            slidingToIndex: slideIndex,\n          })\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n      if (isAuto.value) {\n        return { before: slides.length, after: slides.length }\n      }\n\n      const itemsToShow = Number(config.itemsToShow)\n      const slidesToClone = Math.ceil(itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(() => {\n      if (!clonedSlidesCount.value.before) {\n        return 0\n      }\n      if (isAuto.value) {\n        return (\n          slidesRect.value\n            .slice(-1 * clonedSlidesCount.value.before)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        )\n      }\n\n      return clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    })\n\n    const snapAlignOffset = computed(() => {\n      if (isAuto.value) {\n        const slideIndex =\n          ((currentSlideIndex.value % slides.length) + slides.length) % slides.length\n        return getSnapAlignOffset({\n          slideSize: slidesRect.value[slideIndex]?.[dimension.value],\n          viewportSize: viewportRect.value[dimension.value],\n          align: config.snapAlign,\n        })\n      }\n\n      return getSnapAlignOffset({\n        align: config.snapAlign,\n        itemsToShow: +config.itemsToShow,\n      })\n    })\n    const scrolledOffset = computed(() => {\n      let output = 0\n\n      if (isAuto.value) {\n        if (currentSlideIndex.value < 0) {\n          output =\n            slidesRect.value\n              .slice(currentSlideIndex.value)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        } else {\n          output = slidesRect.value\n            .slice(0, currentSlideIndex.value)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0)\n        }\n        output -= snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          const maxSlidingValue =\n            slidesRect.value.reduce(\n              (acc, slide) => acc + slide[dimension.value] + config.gap,\n              0\n            ) -\n            viewportRect.value[dimension.value] -\n            config.gap\n\n          output = getNumberInRange({\n            val: output,\n            max: maxSlidingValue,\n            min: 0,\n          })\n        }\n      } else {\n        let scrolledSlides = currentSlideIndex.value - snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          scrolledSlides = getNumberInRange({\n            val: scrolledSlides,\n            max: slidesCount.value - +config.itemsToShow,\n            min: 0,\n          })\n        }\n        output = scrolledSlides * effectiveSlideSize.value\n      }\n\n      return output * (isReversed.value ? 1 : -1)\n    })\n\n    const visibleRange = computed(() => {\n      if (!isAuto.value) {\n        const base = currentSlideIndex.value - snapAlignOffset.value\n        if (config.wrapAround) {\n          return {\n            min: Math.floor(base),\n            max: Math.ceil(base + Number(config.itemsToShow) - 1),\n          }\n        }\n        return {\n          min: Math.floor(\n            getNumberInRange({\n              val: base,\n              max: slidesCount.value - Number(config.itemsToShow),\n              min: 0,\n            })\n          ),\n          max: Math.ceil(\n            getNumberInRange({\n              val: base + Number(config.itemsToShow) - 1,\n              max: slidesCount.value - 1,\n              min: 0,\n            })\n          ),\n        }\n      }\n\n      // Auto width mode\n      let minIndex = 0\n      {\n        let accumulatedSize = 0\n        let index = 0 - clonedSlidesCount.value.before\n        const offset = Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n\n        while (accumulatedSize <= offset) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        minIndex = index - 1\n      }\n\n      let maxIndex = 0\n      {\n        let index = minIndex\n        let accumulatedSize = 0\n        if (index < 0) {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n        } else {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value)\n        }\n\n        while (accumulatedSize < viewportRect.value[dimension.value]) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        maxIndex = index - 1\n      }\n\n      return {\n        min: Math.floor(minIndex),\n        max: Math.ceil(maxIndex),\n      }\n    })\n\n    const trackTransform: ComputedRef<string | undefined> = computed(() => {\n      if (config.slideEffect === 'fade') {\n        return undefined\n      }\n\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      let totalOffset = scrolledOffset.value + dragOffset\n\n      if (!config.wrapAround && config.preventExcessiveDragging) {\n        let maxSlidingValue = 0\n        if (isAuto.value) {\n          maxSlidingValue = slidesRect.value.reduce(\n            (acc, slide) => acc + slide[dimension.value],\n            0\n          )\n        } else {\n          maxSlidingValue =\n            (slidesCount.value - Number(config.itemsToShow)) * effectiveSlideSize.value\n        }\n        const min = isReversed.value ? 0 : -1 * maxSlidingValue\n        const max = isReversed.value ? maxSlidingValue : 0\n        totalOffset = getNumberInRange({\n          val: totalOffset,\n          min,\n          max,\n        })\n      }\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const carouselStyle = computed(() => ({\n      '--vc-transition-duration': isSliding.value\n        ? toCssValue(config.transition, 'ms')\n        : undefined,\n      '--vc-slide-gap': toCssValue(config.gap),\n      '--vc-carousel-height': toCssValue(config.height),\n      '--vc-cloned-offset': toCssValue(clonedSlidesOffset.value),\n    }))\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const provided: InjectedCarousel = reactive({\n      activeSlide: activeSlideIndex,\n      config,\n      currentSlide: currentSlideIndex,\n      isSliding,\n      isVertical,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      nav,\n      normalizedDir,\n      slideRegistry,\n      slideSize,\n      slides,\n      slidesCount,\n      viewport,\n      visibleRange,\n    })\n\n    provide(injectCarousel, provided)\n\n    const data = reactive<CarouselData>({\n      config,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      middleSlide: middleSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      slidesCount,\n    })\n\n    expose<CarouselExposed>({\n      data,\n      nav,\n      next,\n      prev,\n      restartCarousel,\n      slideTo,\n      updateBreakpointsConfig,\n      updateSlideSize,\n      updateSlidesData,\n    })\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          style: { transform: trackTransform.value },\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-vertical': isVertical.value,\n              'is-sliding': isSliding.value,\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          style: carouselStyle.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onFocus: handleFocus,\n          onBlur: handleBlur,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n","\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}","export function calculateAverage(numbers: number[]) {\n  if (numbers.length === 0) return 0\n  const sum = numbers.reduce((acc, num) => acc + num, 0)\n  return sum / numbers.length\n}\n","type DragParams = {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const slidesDragged = Math.round(dragValue / effectiveSlideSize)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n","export enum IconName {\n  arrowDown = 'arrowDown',\n  arrowLeft = 'arrowLeft',\n  arrowRight = 'arrowRight',\n  arrowUp = 'arrowUp',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport type IconProps = {\n  name: IconNameValue\n  title?: string\n}\n","import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nexport const icons = {\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n}\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string = carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n","import { computed, defineComponent, h, inject } from 'vue'\n\nimport { injectCarousel, NormalizedDir } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  setup(props, { slots, attrs }) {\n    const carousel = inject(injectCarousel)\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowDown',\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowUp',\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide\n    )\n    const nextDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide\n    )\n\n    return () => {\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            { 'carousel__prev--disabled': prevDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            { 'carousel__next--disabled': nextDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, VNode } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { getSnapAlignOffset, i18nFormatter, mapNumberToRange } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const itemsToShow = computed(() => carousel.config.itemsToShow as number)\n    const offset = computed(() =>\n      getSnapAlignOffset({\n        align: carousel.config.snapAlign,\n        itemsToShow: itemsToShow.value,\n      })\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && itemsToShow.value > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / itemsToShow.value)\n    )\n    const pageCount = computed(() => Math.ceil(carousel.slidesCount / itemsToShow.value))\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? Math.floor(slide * +carousel.config.itemsToShow + offset.value)\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n","import {\n  ComputedRef,\n  computed,\n  defineComponent,\n  DeepReadonly,\n  getCurrentInstance,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  SetupContext,\n  useId,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n    position: {\n      type: String,\n      default: undefined,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { attrs, slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    const instance = getCurrentInstance()!\n\n    const getBoundingRect = () => {\n      const el = instance.vnode.el as HTMLElement\n      return el ? el.getBoundingClientRect() : { width: 0, height: 0 }\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n      getBoundingRect,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= carousel.visibleRange.min &&\n        currentIndex.value <= carousel.visibleRange.max\n    )\n\n    const slideStyle = computed(() => {\n      if (carousel.config.itemsToShow === 'auto') {\n        return\n      }\n      const itemsToShow = carousel.config.itemsToShow\n      const dimension =\n        carousel.config.gap > 0 && itemsToShow > 1\n          ? `calc(${100 / itemsToShow}% - ${\n              (carousel.config.gap * (itemsToShow - 1)) / itemsToShow\n            }px)`\n          : `${100 / itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: [attrs.style, { ...slideStyle.value }],\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          currentIndex: currentIndex.value,\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n"],"names":["BREAKPOINT_MODE_OPTIONS","DIR_MAP","DIR_OPTIONS","I18N_DEFAULT_CONFIG","ariaGallery","ariaNavigateToPage","ariaNavigateToSlide","ariaNextSlide","ariaPreviousSlide","iconArrowDown","iconArrowLeft","iconArrowRight","iconArrowUp","itemXofY","NORMALIZED_DIR_OPTIONS","Object","values","SLIDE_EFFECTS","SNAP_ALIGN_OPTIONS","DEFAULT_CONFIG","autoplay","breakpointMode","breakpoints","undefined","dir","enabled","gap","height","i18n","ignoreAnimations","itemsToScroll","itemsToShow","modelValue","mouseDrag","pauseAutoplayOnHover","preventExcessiveDragging","slideEffect","snapAlign","touchDrag","transition","wrapAround","injectCarousel","Symbol","createSlideRegistry","emit","slides","shallowReactive","updateSlideIndexes","startIndex","slice","forEach","slide","offset","_a","exposed","setIndex","index","cleanup","splice","length","getSlides","registerSlide","props","isClone","slideIndex","unregisterSlide","indexOf","createCloneSlides","position","toShow","clones","isBefore","start","end","i","id","key","vnode","clone","cloneVNode","el","push","disableChildrenTabbing","node","Element","elements","querySelectorAll","HTMLElement","hasAttribute","getAttribute","setAttribute","getNumberInRange","val","max","min","Math","isNaN","getScaleMultipliers","transformElements","widthMultiplier","heightMultiplier","transformArr","transform","window","getComputedStyle","split","map","v","parseFloat","getTransformValues","getSnapAlignOffset","slideSize","viewportSize","align","getSnapAlignOffsetByItemsToShow","getSnapAlignOffsetBySlideAndViewport","i18nFormatter","string","entries","reduce","acc","value","replace","String","mapNumberToRange","mod","throttle","fn","ms","isThrottled","frameId","throttled","args","step","requestAnimationFrame","time","cancel","cancelAnimationFrame","toCssValue","unit","toString","ARIA","defineComponent","name","setup","carousel","inject","h","class","config","currentSlide","slidesCount","carouselProps","default","type","Number","validator","includes","Boolean","Array","console","warn","Carousel","emits","slots","expose","slideRegistry","computed","root","ref","viewport","fallbackConfig","assign","obj","keys","filter","k","currentSlideIndex","activeSlideIndex","watch","prevSlideIndex","middleSlideIndex","ceil","maxSlideIndex","minSlideIndex","autoplayTimer","transitionTimer","resizeObserver","effectiveSlideSize","normalizedDir","isReversed","isVertical","isAuto","dimension","updateBreakpointsConfig","mounted","widthSource","getBoundingClientRect","width","innerWidth","breakpointsArray","sort","a","b","newConfig","some","breakpoint","handleResize","updateSlidesData","updateSlideSize","Set","slidesRect","viewportRect","scaleMultipliers","rect","updateViewportRectSize","getBoundingRect","updateSlidesRectSize","numbers","num","totalGap","isArray","animationInterval","watchEffect","setAnimationInterval","event","target","contains","animationName","add","stepAnimation","finishAnimation","delete","size","document","addEventListener","removeEventListener","onMounted","initAutoplay","ResizeObserver","observe","onBeforeUnmount","clearTimeout","clearInterval","disconnect","handleBlur","isTouch","startPosition","x","y","dragged","reactive","isHover","isDragging","handleMouseEnter","handleMouseLeave","handleArrowKeys","ctrlKey","endsWith","next","prev","handleFocus","handleDragStart","targetTagName","tagName","isSliding","preventDefault","button","touches","clientX","clientY","moveEvent","endEvent","handleDragging","passive","handleDragEnd","currentX","currentY","draggedSlides","params","dragValue","slidesDragged","round","getDraggedSlidesCount","deltaX","deltaY","preventClick","e","slideTo","setInterval","stopAutoplay","resetAutoplay","skipTransition","targetIndex","mappedIndex","slidingToIndex","modelWatcher","pause","setTimeout","resume","deep","clonedSlidesCount","before","after","slidesToClone","clonedSlidesOffset","snapAlignOffset","scrolledOffset","output","scrolledSlides","visibleRange","base","floor","minIndex","accumulatedSize","abs","normalizedIndex","maxIndex","_b","trackTransform","translateAxis","dragOffset","totalOffset","maxSlidingValue","carouselStyle","nav","provided","activeSlide","maxSlide","minSlide","provide","data","middleSlide","restartCarousel","slotSlides","outputSlides","addonsElements","addons","call","trackEl","style","onMousedownCapture","onTouchstartPassiveCapture","viewPortEl","tabindex","onFocus","onBlur","onMouseenter","onMouseleave","ARIAComponent","IconName","iconI18n","charAt","toUpperCase","icons","arrowDown","arrowLeft","arrowRight","arrowUp","validateIconName","Icon","required","title","iconName","path","pathEl","d","iconTitle","titleEl","viewBox","role","Navigation","inheritAttrs","attrs","slotNext","slotPrev","prevDisabled","nextDisabled","disabled","onClick","btt","ltr","rtl","ttb","Pagination","disableOnClick","paginateByItemsToShow","isPaginated","currentPage","pageCount","isActive","children","buttonLabel","slideNumber","active","item","Slide","useId","currentIndex","instance","getCurrentInstance","newIndex","isPrev","isNext","isVisible","slideStyle","onUnmounted","onUpdated","carousel__slide","onFocusin","scrollLeft"],"mappings":"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"}